{"is_source_file": true, "format": "Dart", "description": "This file defines a CartProvider class that manages shopping cart operations such as adding, removing, updating items, and persisting the cart state using local storage. It extends ChangeNotifier to support reactive updates in a Flutter app.", "external_files": ["../models/cart_item.dart", "../services/local_storage_service.dart"], "external_methods": ["LocalStorageService.getCart", "LocalStorageService.saveCart", "CartItem.copyWith"], "published": ["CartProvider"], "classes": [{"name": "CartProvider", "description": "A state management class for shopping cart functionality, including load, add, remove, update, and persist operations."}], "methods": [{"name": "loadFromStorage", "description": "Loads the cart items from local storage and notifies listeners."}, {"name": "addItem", "description": "Adds a new item or increases the quantity of an existing item in the cart."}, {"name": "removeItem", "description": "Removes an item from the cart based on the book ID."}, {"name": "updateQuantity", "description": "Updates the quantity of an existing item, removing it if the quantity is less than or equal to zero."}, {"name": "totalCount", "description": "Calculates the total quantity of all items in the cart."}, {"name": "_persist", "description": "Persists the current cart state to local storage and notifies listeners."}], "calls": ["LocalStorageService.getCart", "LocalStorageService.saveCart", "CartItem.copyWith"], "search-terms": ["CartProvider", "local storage", "cart management", "flutter change notifier", "shopping cart"], "state": 2, "file_id": 30, "knowledge_revision": 62, "git_revision": "", "hash": "c90a4ea5d896f153f20fcf8e16110b0e", "format-version": 4, "code-base-name": "booknest_mobile_frontend", "filename": "booknest_mobile_frontend/lib/state/cart_provider.dart", "revision_history": [{"62": ""}]}